#!/bin/bash

# requirements:
# * curl or wget
#     to get publicly available information from ipinfo.io
# * shodan
#     `pip install shodan`, then `shodan init <api key>`
# * censys
#     `pip install censys`, then `censys config`
# * greynoise
#     `pip install greynoise`, then `greynoise setup -k <api key>`
# * jq
#     `apt install jq` to parse data from apivoid.io

if [[ "$#" -lt 1 ]] ; then
    echo "Usage: $0 <ip> [<ip> ...]" >&2
    exit 1
fi

while [[ "$#" -gt 0 ]] ; do
    if which curl >/dev/null ; then
        echo -e "\e[93mipinfo.io result for $1\e[0m"
        curl -s ipinfo.io/"$1"
        echo ''
    elif which wget >/dev/null ; then
        echo -e "\e[93mipinfo.io result for $1\e[0m"
        wget -q -O - ipinfo.io/"$1"
        echo ''
    fi
    if which shodan >/dev/null ; then
        echo -e "\e[93mshodan result for $1\e[0m"
        shodan host "$1"
    fi
    if which censys >/dev/null ; then
        echo -e "\e[93mcensys result for $1\e[0m"
        censys search -q "ip:$1"
    fi
    if which greynoise >/dev/null ; then
        echo -e "\e[93mgreynoise result for $1\e[0m"
        greynoise ip "$1"
    fi
    if which curl >/dev/null && which jq >/dev/null && [[ -f "~/.apivoid_api_key.txt" ]] ; then
        echo -e "\e[93mapivoid result for $1\e[0m"
        result="$(curl -s https://endpoint.apivoid.com/iprep/v1/pay-as-you-go/?key="$(cat "~/.apivoid_api_key.txt" | tr -d '\n')"&ip="$1")"
        echo -n 'number of detections: '
        echo $result | jq '.data.report.blacklists.detections'
        echo -n 'detection rate: '
        echo $result | jq '.data.report.blacklists.detection_rate'
        echo -n 'risk score: '
        echo $result | jq '.data.report.risk_score'
        echo -n 'anonymity: '
        echo $result | jq '.data.report.anonymity'
        echo -n 'information: '
        echo $result | jq '.data.report.information'

    fi
    shift
done

